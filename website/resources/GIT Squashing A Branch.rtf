{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
\readonlydoc1{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red27\green29\blue31;\red235\green236\blue237;\red27\green31\blue34;
\red244\green246\blue249;\red21\green23\blue26;}
{\*\expandedcolortbl;;\cssrgb\c14118\c15294\c16078;\cssrgb\c93725\c94118\c94510;\cssrgb\c14118\c16078\c18039;
\cssrgb\c96471\c97255\c98039;\cssrgb\c10588\c12157\c13725\c4706;}
{\info
{\author Kevin Fjelsted}}\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
#### Squashing a Branch -- Assuming "master" in this example\
git rebase -i --root\
### Use nano to change all but the first commit form pick to squash\
### Save the commit as amended by\
$ Git commit --amend -m "comment"\
### Update the repository\
\pard\pardeftab720\partightenfactor0

\fs27\fsmilli13600 \cf4 \cb5 git push origin master --force
\fs26 \cf2 \cb3 \
\
### Setting Upstream branches\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \cb1 ```bash\
git branch --set-upstream-to <remote-branch>\
# example\
git branch --set-upstream-to origin feature-branch\
\
# show up which remote branch a local branch is tracking\
git branch -vv\
```\
sets the default remote branch for the current local branch.\
\
Any future `git pull` command (with the current local branch checked-out), will attempt to bring in commits from the `<remote-branch>` into the current local branch.\
\
One way to avoid having to explicitly do `--set-upstream` is to use the shorthand flag `-u` along with the very first `git push` as follows\
```bash\
git push -u origin local-branch\
```
\f0 \cf2 \cb3 \
### Remove the tracking.\
\pard\pardeftab720\partightenfactor0

\fs23\fsmilli11900 \cf4 \cb6 git branch --unset-upstream
\fs26 \cf2 \cb3 \
\
###To sync up master do the follow9ing\
git fetch origin master\
git reset --hard FETCH_HEAD\
\
}